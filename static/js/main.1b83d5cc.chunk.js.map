{"version":3,"sources":["reportWebVitals.js","components/Frame/Frame.js","index.js","components/Home/Home.js","components/Tasks/Task1.js","components/Tasks/Task2.js","components/Tasks/Task3.js","components/Tasks/Task4.js","components/Tasks/Task5.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Frame","children","code","useState","stage","setStage","Stage","Stage1","Stage2","Stage3","Navbar","bg","Container","Brand","href","Row","Col","sm","Button","onClick","changeQueue","queueSize","setQueueSize","setTimeout","renderTask","setRenderTask","useEffect","makeid","length","result","characters","charactersLength","i","push","charAt","Math","floor","random","join","ReactDOM","render","StrictMode","exact","path","component","variant","setCode","finished","setFinished","answer","setAnswer","submitted","setSubmitted","Image","src","process","width","style","marginBottom","Form","InputGroup","size","className","hasValidation","Control","type","aria-describedby","name","value","onChange","e","target","isInvalid","trim","Append","taskSubmitted","Group","setCorrect","marginRight","alt","document","getElementById"],"mappings":"0LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qECJC,SAASQ,EAAT,GAAoC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACtC,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAQ,KACZ,OAAQF,GACJ,KAAK,EACDE,EAAQC,EACR,MACJ,KAAK,EACDD,EAAQE,EACR,MACJ,KAAK,EACDF,EAAQG,EACR,MACJ,QACIH,EAAQC,EAEhB,OAAO,gCACH,cAACG,EAAA,EAAD,CAAQC,GAAG,QAAX,SACI,cAACC,EAAA,EAAD,UACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,uBAGR,cAACR,EAAD,CAAOD,SAAUA,EAAUH,KAAMA,EAAjC,SACKD,OAKb,SAASM,EAAT,GAA+B,IAAbF,EAAY,EAAZA,SACd,OAAO,gCACH,uBACA,eAACO,EAAA,EAAD,WACI,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,0DACZ,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,cAACC,EAAA,EAAD,CAAQC,QAAS,WAAQd,EAAS,IAAlC,2BACZ,cAACW,EAAA,EAAD,UAAK,4BAET,eAACD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,mKAIJ,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,+BACI,uDACA,8DACA,iEAQxB,SAASG,EAAYC,EAAWC,EAAcjB,GACxB,IAAdgB,EAKJE,YAAW,WACPD,EAAaD,EAAY,GACzBD,EAAYC,EAAY,EAAGC,EAAcjB,KAC1C,MAPCA,EAAS,GAUjB,SAASG,EAAT,GAAyC,IAAvBP,EAAsB,EAAtBA,SAAUI,EAAY,EAAZA,SACxB,EAAkCF,mBAAS,GAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAAoCnB,oBAAS,GAA7C,mBAAOqB,EAAP,KAAmBC,EAAnB,KAOA,OANAC,qBAAU,WACNN,EAAYC,EAAWC,EAAcjB,GACrCkB,YAAW,WACPE,GAAc,KACf,OACJ,IACI,gCACH,uBACA,eAACb,EAAA,EAAD,WACI,eAACG,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,UAAa,kDAAb,cAAiD,4BAAII,IAArD,gCACA,cAACL,EAAA,EAAD,UAAK,4BAET,cAACD,EAAA,EAAD,UACKS,GAAcvB,UAM/B,SAAS0B,EAAOC,GAIZ,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAmBD,EAAWF,OACzBI,EAAI,EAAGA,EAAIJ,EAAQI,IACxBH,EAAOI,KAAKH,EAAWI,OAAOC,KAAKC,MAAMD,KAAKE,SAC1CN,KAER,OAAOF,EAAOS,KAAK,IAGvB,SAAS7B,EAAT,GAA2B,IAATP,EAAQ,EAARA,KACd,OAAQ,gCACJ,uBACA,cAACU,EAAA,EAAD,UACI,cAACG,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,wDACA,uBACA,8HAGA,4BAAG,sDAAyBW,EAAO,GAAKzB,iB,4BCvG5DqC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UCbV,WACX,OACI,gCACI,sCACA,cAAC1B,EAAA,EAAD,CAAQ2B,QAAQ,UAAhB,qBAA2C,IAC3C,cAAC3B,EAAA,EAAD,CAAQ2B,QAAQ,UAAhB,qBAA2C,IAC3C,cAAC3B,EAAA,EAAD,CAAQ2B,QAAQ,UAAhB,qBAA2C,UDQpD,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UEZf,WACX,MAAwBzC,mBAAS,GAAjC,mBAAOD,EAAP,KAAa4C,EAAb,KACA,EAAgC3C,oBAAS,GAAzC,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA4B7C,mBAAS,IAArC,mBAAO8C,EAAP,KAAeC,EAAf,KACA,EAAkC/C,oBAAS,GAA3C,mBAAOgD,EAAP,KAAkBC,EAAlB,KAEA,OAAIL,EAEI,cAAC/C,EAAD,CAAOE,KAAMA,EAAb,SACI,cAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,6DAWZ,eAACjB,EAAD,CAAOE,KAAMA,EAAb,UACI,eAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,UACI,yFACA,uFAEJ,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACoC,EAAA,EAAD,CAAOC,IAAKC,oCAA6CC,MAAM,OAAOC,MAAO,CAACC,aAAc,UAC5F,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAYC,KAAK,KAAKC,UAAU,OAAOC,eAAa,EAApD,UACI,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,mBAAiB,uBAAuBC,KAAK,SAASC,MAAOnB,EAAQoB,SAAW,SAAAC,GAAC,OAAIpB,EAAUoB,EAAEC,OAAOH,QAAQI,UAAWrB,GAAsC,IAAzBF,EAAOwB,OAAO7C,SAChL,cAACgC,EAAA,EAAWc,OAAZ,UACI,cAACxD,EAAA,EAAD,CAAQC,QAjBV,WAClB8B,EAAOwB,OAAO7C,OAAS,EAAIoB,GAAY,GAAQI,GAAa,GAC5DN,EAAQ,IAeY,oCFnBzB,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,SAASC,UGbf,WACX,MAAwBzC,mBAAS,GAAjC,mBAAOD,EAAP,KAAa4C,EAAb,KACA,EAAgC3C,oBAAS,GAAzC,mBAAO4C,EAAP,KAAiBC,EAAjB,KAEA,GAAID,EACA,OACI,cAAC/C,EAAD,CAAOE,KAAMA,EAAb,SACI,cAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,6DAKhB,IAAM0D,EAAgB,WAClB3B,GAAY,GACZF,EAAQ,IAGZ,OACI,eAAC9C,EAAD,CAAOE,KAAMA,EAAb,UACI,eAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,UACI,yFACA,uFAEJ,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACoC,EAAA,EAAD,CAAOC,IAAKC,oCAA6CC,MAAM,OAAOC,MAAO,CAAEC,aAAc,UAC7F,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKiB,MAAN,WACI,cAAC1D,EAAA,EAAD,CAAQC,QAASwD,EAAjB,kBAA6C,qCAC7C,cAACzD,EAAA,EAAD,CAAQC,QAASwD,EAAjB,kBAA6C,qCAC7C,cAACzD,EAAA,EAAD,CAAQC,QAASwD,EAAjB,iBAA4C,qCAC5C,cAACzD,EAAA,EAAD,CAAQC,QAASwD,EAAjB,iBAA4C,mDHjBjE,cAAC,IAAD,CAAOjC,OAAK,EAACC,KAAK,SAASC,UIdf,WACX,MAAwBzC,mBAAS,GAAjC,mBAAOD,EAAP,KAAa4C,EAAb,KACA,EAAgC3C,oBAAS,GAAzC,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA8B7C,oBAAS,GAAvC,mBAAgB0E,GAAhB,WAEA,GAAI9B,EAEA,OACI,cAAC/C,EAAD,CAAOE,KAAMA,EAAb,SACI,cAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,6DAMhB,IAAM0D,EAAgB,WAClB3B,GAAY,GACZF,EAAQ,IAGZ,OAAO,eAAC9C,EAAD,CAAOE,KAAMA,EAAb,UACH,eAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,UACI,yFACA,uFAAyD,qCAAzD,UAEJ,eAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,UACI,cAACoC,EAAA,EAAD,CAAOC,IAAKC,oCAA6CC,MAAM,OAAOC,MAAO,CAAEC,aAAc,OAAQoB,YAAa,QAAU3D,QAASwD,IACrI,cAACtB,EAAA,EAAD,CAAOC,IAAKC,oCAA6CC,MAAM,OAAOC,MAAO,CAAEC,aAAc,QAAUvC,QAASwD,OAEpH,eAAC3D,EAAA,EAAD,CAAKC,GAAI,GAAT,UACI,cAACoC,EAAA,EAAD,CAAOC,IAAKC,qCAA8CC,MAAM,OAAOC,MAAO,CAAEC,aAAc,OAAQoB,YAAa,QAAU3D,QAAS,WAClIwD,IACAE,GAAW,MAEf,cAACxB,EAAA,EAAD,CAAOC,IAAKC,oCAA6CC,MAAM,OAAOC,MAAO,CAAEC,aAAc,QAAUvC,QAASwD,aJpBzH,cAAC,IAAD,CAAOjC,OAAK,EAACC,KAAK,SAASC,UKff,WACX,MAAwBzC,mBAAS,GAAjC,mBAAOD,EAAP,KAAa4C,EAAb,KACA,EAAgC3C,oBAAS,GAAzC,mBAAO4C,EAAP,KAAiBC,EAAjB,KAEA,GAAID,EAEA,OACI,cAAC/C,EAAD,CAAOE,KAAMA,EAAb,SACI,cAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,6DAKhB,IAAM0D,EAAgB,WAClB3B,GAAY,GACZF,EAAQ,IAGZ,OACI,cAAC9C,EAAD,CAAOE,KAAMA,EAAM4C,QAASA,EAA5B,SACI,eAAC9B,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,sFACA,cAAC0C,EAAA,EAAD,UACI,eAACA,EAAA,EAAKiB,MAAN,WACI,cAAC1D,EAAA,EAAD,CAAQC,QAASwD,EAAjB,qBAAgD,qCAChD,cAACzD,EAAA,EAAD,CAAQC,QAASwD,EAAjB,8BAAyD,qCACzD,cAACzD,EAAA,EAAD,CAAQC,QAASwD,EAAjB,sCAAiE,qCACjE,cAACzD,EAAA,EAAD,CAAQC,QAASwD,EAAjB,mBAA8C,kDLZnE,cAAC,IAAD,CAAOjC,OAAK,EAACC,KAAK,SAASC,UMjBf,WACX,MAAwBzC,mBAAS,GAAjC,mBAAOD,EAAP,KAEA,OAFA,KAEO,cAACF,EAAD,CAAOE,KAAMA,EAAb,SAAmB,qBAAKoD,IAAKC,uCAAgDwB,IAAI,kCNiB3FC,SAASC,eAAe,SAMzB1F,M","file":"static/js/main.1b83d5cc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Navbar, Row } from \"react-bootstrap\";\n\nexport default function Frame({ children, code }) {\n    const [stage, setStage] = useState(1);\n    let Stage = null;\n    switch (stage) {\n        case 1:\n            Stage = Stage1;\n            break;\n        case 2:\n            Stage = Stage2;\n            break;\n        case 3:\n            Stage = Stage3;\n            break;\n        default:\n            Stage = Stage1;\n    }\n    return <div>\n        <Navbar bg=\"light\">\n            <Container>\n                <Navbar.Brand href=\"#home\">Queue</Navbar.Brand>\n            </Container>\n        </Navbar>\n        <Stage setStage={setStage} code={code}>\n            {children}\n        </Stage>\n    </div>\n}\n\nfunction Stage1({ setStage }) {\n    return <div>\n        <br />\n        <Container>\n            <Row>\n                <Col sm={4}><h3>Please enter the queue</h3></Col>\n                <Col sm={8}><Button onClick={() => { setStage(2) }}>Enter queue</Button></Col>\n                <Col><hr /></Col>\n            </Row>\n            <Row>\n                <Col sm={5}>\n                    <p>\n                        If you have any questions regarding the course content or an assignment, please enter the queue to talk to a teaching assistant.\n                    </p>\n                </Col>\n                <Col sm={7}>\n                    <ul>\n                        <li>Current queue size: 5</li>\n                        <li>Estimate waiting time: 2 min</li>\n                        <li>Amount of TA's: 5</li>\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n}\n\nfunction changeQueue(queueSize, setQueueSize, setStage) {\n    if (queueSize === 0) {\n        setStage(3)\n        return;\n    }\n\n    setTimeout(() => {\n        setQueueSize(queueSize - 1)\n        changeQueue(queueSize - 1, setQueueSize, setStage)\n    }, 24000)\n}\n\nfunction Stage2({ children, setStage }) {\n    const [queueSize, setQueueSize] = useState(5);\n    const [renderTask, setRenderTask] = useState(false)\n    useEffect(() => {\n        changeQueue(queueSize, setQueueSize, setStage)\n        setTimeout(() => {\n            setRenderTask(true)\n        }, 5000)\n    }, [])\n    return <div>\n        <br />\n        <Container>\n            <Row>\n                <Col sm={12}><h3>You are enqueued</h3> There are <b>{queueSize}</b> people waiting before you</Col>\n                <Col><hr /></Col>\n            </Row>\n            <Row>\n                {renderTask && children}\n            </Row>\n        </Container>\n    </div>\n}\n\nfunction makeid(length) {\n    var result = [];\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result.push(characters.charAt(Math.floor(Math.random() *\n            charactersLength)));\n    }\n    return result.join('');\n}\n\nfunction Stage3({ code }) {\n    return (<div>\n        <br />\n        <Container>\n            <Row>\n                <Col>\n                    <h3>Thank you for queueing</h3>\n                    <hr />\n                    <p>\n                        Please return to toloka now to fill out the questionnaire and enter your identification code.\n                    </p>\n                    <p><b>Identification code: {makeid(5) + code}</b></p>\n                </Col>\n            </Row>\n        </Container>\n    </div>)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Task1 from './components/Tasks/Task1';\nimport Task2 from './components/Tasks/Task2';\nimport Task3 from './components/Tasks/Task3';\nimport Task4 from './components/Tasks/Task4';\nimport Task5 from './components/Tasks/Task5';\nimport Home from './components/Home/Home';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter >\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t<Route exact path=\"/task1\" component={Task1} />\n\t\t\t<Route exact path=\"/task2\" component={Task2} />\n\t\t\t<Route exact path=\"/task3\" component={Task3} />\n\t\t\t<Route exact path=\"/task4\" component={Task4} />\n\t\t\t<Route exact path=\"/task5\" component={Task5} />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import Button from 'react-bootstrap/Button';\n\nexport default function Home() {\n    return (\n        <div>\n            <h1>Home</h1>\n            <Button variant=\"primary\">Primary</Button>{' '}\n            <Button variant=\"primary\">Primary</Button>{' '}\n            <Button variant=\"primary\">Primary</Button>{' '}\n        </div>\n    )\n}\n\n","import Frame from \"../Frame/Frame\"\nimport { useState } from \"react\";\nimport { Image, Form, Col, Button, InputGroup} from \"react-bootstrap\";\n\nexport default function Task1() {\n    const [code, setCode] = useState(0);\n    const [finished, setFinished] = useState(false);\n    const [answer, setAnswer] = useState(\"\");\n    const [submitted, setSubmitted] = useState(false);\n\n    if (finished) {\n        return (\n            <Frame code={code}>\n                <Col sm={12}>\n                    <p>Thank you for your time!</p>\n                </Col>\n            </Frame>)\n    }\n\n    const taskSubmitted = () => {\n        answer.trim().length > 0 ? setFinished(true) : setSubmitted(true);\n        setCode(1);\n    }\n\n    return (\n        <Frame code={code}>\n            <Col sm={12}>\n                <h5>Whilst you're waiting, why not do something productive?</h5>\n                <p>Could you identify what you see in the image below?</p>\n            </Col>\n            <Col sm={4}>\n                <Image src={process.env.PUBLIC_URL + \"/images/dog.jpeg\"} width=\"100%\" style={{marginBottom: \"25px\"}}></Image>\n                <Form>\n                    <InputGroup size=\"sm\" className=\"mb-3\" hasValidation>\n                        <Form.Control type=\"text\" aria-describedby=\"inputGroup-sizing-sm\" name=\"answer\" value={answer} onChange={ e => setAnswer(e.target.value)} isInvalid={submitted && answer.trim().length === 0}/>\n                        <InputGroup.Append>\n                            <Button onClick={taskSubmitted}>Submit</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form>\n            </Col>\n        </Frame>);\n}","import Frame from \"../Frame/Frame\"\nimport { useState } from \"react\";\nimport { Image, Col, Button, Form } from \"react-bootstrap\";\n\nexport default function Task2() {\n    const [code, setCode] = useState(0);\n    const [finished, setFinished] = useState(false);\n\n    if (finished) {\n        return (\n            <Frame code={code}>\n                <Col sm={12}>\n                    <p>Thank you for your time!</p>\n                </Col>\n            </Frame>)\n    }\n\n    const taskSubmitted = () => {\n        setFinished(true);\n        setCode(1)\n    }\n\n    return (\n        <Frame code={code}>\n            <Col sm={12}>\n                <h5>Whilst you're waiting, why not do something productive?</h5>\n                <p>Could you identify what you see in the image below?</p>\n            </Col>\n            <Col sm={4}>\n                <Image src={process.env.PUBLIC_URL + \"/images/dog.jpeg\"} width=\"100%\" style={{ marginBottom: \"25px\" }}></Image>\n                <Form>\n                    <Form.Group>\n                        <Button onClick={taskSubmitted}>Ball</Button><span> </span>\n                        <Button onClick={taskSubmitted}>Boat</Button><span> </span>\n                        <Button onClick={taskSubmitted}>Car</Button><span> </span>\n                        <Button onClick={taskSubmitted}>Dog</Button><span> </span>\n                    </Form.Group>\n                </Form>\n            </Col>\n        </Frame>);\n}","import Frame from \"../Frame/Frame\"\nimport { useState } from \"react\";\nimport { Image, Col } from \"react-bootstrap\";\n\nexport default function Task3() {\n    const [code, setCode] = useState(0);\n    const [finished, setFinished] = useState(false);\n    const [correct, setCorrect] = useState(false);\n\n    if (finished) {\n        //setCode(1) //TBD encode correct\n        return (\n            <Frame code={code}>\n                <Col sm={12}>\n                    <p>Thank you for your time!</p>\n                </Col>\n            </Frame>\n        )\n    }\n\n    const taskSubmitted = () => {\n        setFinished(true);\n        setCode(1)\n    }\n\n    return <Frame code={code}>\n        <Col sm={12}>\n            <h5>Whilst you're waiting, why not do something productive?</h5>\n            <p>Could you identify which image below corresponds to a <b>boat</b>?</p>\n        </Col>\n        <Col sm={12}>\n            <Image src={process.env.PUBLIC_URL + \"/images/dog.jpeg\"} width=\"200p\" style={{ marginBottom: \"25px\", marginRight: \"25px\" }} onClick={taskSubmitted}></Image>\n            <Image src={process.env.PUBLIC_URL + \"/images/car.jpeg\"} width=\"200p\" style={{ marginBottom: \"25px\" }} onClick={taskSubmitted}></Image>\n        </Col>\n        <Col sm={12}>\n            <Image src={process.env.PUBLIC_URL + \"/images/boat.jpeg\"} width=\"200p\" style={{ marginBottom: \"25px\", marginRight: \"25px\" }} onClick={() => {\n                taskSubmitted()\n                setCorrect(true)\n            }}></Image>\n            <Image src={process.env.PUBLIC_URL + \"/images/ball.jpg\"} width=\"200p\" style={{ marginBottom: \"25px\" }} onClick={taskSubmitted}></Image>\n        </Col>\n    </Frame>\n\n    //Show a word and 4 images, task workers have to choose the image that is described\n}","import Frame from \"../Frame/Frame\"\nimport { useState } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\n\nexport default function Task4() {\n    const [code, setCode] = useState(0);\n    const [finished, setFinished] = useState(false);\n\n    if (finished) {\n        //setCode(1) //TBD encode answer\n        return (\n            <Frame code={code}>\n                <Col sm={12}>\n                    <p>Thank you for your time!</p>\n                </Col>\n            </Frame>)\n    }\n\n    const taskSubmitted = () => {\n        setFinished(true);\n        setCode(1)\n    }\n\n    return (\n        <Frame code={code} setCode={setCode}>\n            <Col sm={6}>\n                <h5>What are your thoughts on the Covid-19 vaccinations?</h5>\n                <Form>\n                    <Form.Group>\n                        <Button onClick={taskSubmitted}>Neutral</Button><span> </span>\n                        <Button onClick={taskSubmitted}>Happy to get it!</Button><span> </span>\n                        <Button onClick={taskSubmitted}>I'm not going to get it!</Button><span> </span>\n                        <Button onClick={taskSubmitted}>Other</Button><span> </span>\n                    </Form.Group>\n                </Form>\n            </Col>\n        </Frame>);\n\n    //Show plain questionnaire\n}","import Frame from \"../Frame/Frame\"\nimport { useState } from \"react\";\n\nexport default function Task5() {\n    const [code, setCode] = useState(0);\n\n    return <Frame code={code}><img src={process.env.PUBLIC_URL + \"/images/loading.gif\"} alt=\"Waiting in queue...\" /></Frame>\n    //Show loading animation, no task (benchmark)\n}"],"sourceRoot":""}
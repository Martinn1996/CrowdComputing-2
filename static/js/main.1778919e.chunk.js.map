{"version":3,"sources":["reportWebVitals.js","components/Frame/Frame.js","index.js","components/Home/Home.js","components/Tasks/Task1.js","components/Tasks/Task2.js","components/Tasks/Task3.js","components/Tasks/Task4.js","components/Tasks/Task5.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Frame","children","code","useState","stage","setStage","Stage","Stage1","Stage2","Stage3","className","Navbar","bg","Container","Brand","Row","Col","sm","Button","onClick","changeQueue","queueSize","setQueueSize","setTimeout","renderTask","setRenderTask","useEffect","Animated","springProps","useSpring","to","opacity","marginTop","from","config","duration","div","style","makeid","length","result","characters","charactersLength","i","push","charAt","Math","floor","random","join","ReactDOM","render","StrictMode","exact","path","component","variant","setCode","finished","setFinished","answer","setAnswer","submitted","setSubmitted","selected","setSelected","tasks","question","Form","Image","src","process","image","maxHeight","marginBottom","InputGroup","size","hasValidation","Control","type","aria-describedby","name","value","onChange","e","target","isInvalid","trim","Append","taskSubmitted","Group","options","map","x","marginRight","dangerouslySetInnerHTML","__html","maxWidth","option","setOption","Check","label","id","checked","console","log","alt","document","getElementById"],"mappings":"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","file":"static/js/main.1778919e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Navbar, Row } from \"react-bootstrap\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nexport default function Frame({ children, code }) {\r\n    const [stage, setStage] = useState(1);\r\n    let Stage = null;\r\n    switch (stage) {\r\n        case 1:\r\n            Stage = Stage1;\r\n            break;\r\n        case 2:\r\n            Stage = Stage2;\r\n            break;\r\n        case 3:\r\n            Stage = Stage3;\r\n            break;\r\n        default:\r\n            Stage = Stage1;\r\n    }\r\n    return <div className=\"d-flex flex-column min-vh-100\">\r\n        <Navbar bg=\"light\">\r\n            <Container>\r\n                <Navbar.Brand>Queue</Navbar.Brand>\r\n            </Container>\r\n        </Navbar>\r\n        <Stage setStage={setStage} code={code}>\r\n            {children}\r\n        </Stage>\r\n        <footer className=\"page-footer font-small pt-1 mt-auto bg-light\">\r\n            <div className=\"footer-copyright text-center py-3\" >Â© 2021 Copyright:\r\n                <span> RedClout Computing </span>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n}\r\n\r\nfunction Stage1({ setStage }) {\r\n    return <div>\r\n        <br />\r\n        <Container>\r\n            <Row>\r\n                <Col sm={4}><h3>Please enter the queue</h3></Col>\r\n                <Col sm={8}><Button onClick={() => { setStage(2) }}>Enter queue</Button></Col>\r\n                <Col><hr /></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={5}>\r\n                    <p>\r\n                        If you have any questions regarding the course content or an assignment, please enter the queue to talk to a teaching assistant.\r\n                    </p>\r\n                </Col>\r\n                <Col sm={7}>\r\n                    <ul>\r\n                        <li>Current queue size: 5</li>\r\n                        <li>Estimate waiting time: 2 min</li>\r\n                        <li>Amount of TA's: 5</li>\r\n                    </ul>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n}\r\n\r\nfunction changeQueue(queueSize, setQueueSize, setStage) {\r\n    if (queueSize === 0) {\r\n        setStage(3)\r\n        return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n        setQueueSize(queueSize - 1)\r\n        changeQueue(queueSize - 1, setQueueSize, setStage)\r\n    }, 12000)\r\n}\r\n\r\nfunction Stage2({ children, setStage }) {\r\n    const [queueSize, setQueueSize] = useState(5);\r\n    const [renderTask, setRenderTask] = useState(false)\r\n\r\n    useEffect(() => {\r\n        changeQueue(queueSize, setQueueSize, setStage)\r\n        setTimeout(() => {\r\n            setRenderTask(true)\r\n        }, 5000)\r\n    }, [])\r\n\r\n    return <div>\r\n        <br />\r\n        <Container>\r\n            <Row>\r\n                <Col sm={12}><h3>You are enqueued</h3> There are <b>{queueSize}</b> people waiting before you</Col>\r\n                <Col><hr /></Col>\r\n            </Row>\r\n            <Row>\r\n                {renderTask && <Animated children={children} />}\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n}\r\n\r\nfunction Animated({children}) {\r\n    const springProps = useSpring({\r\n        to: { opacity: 1, marginTop: 0},\r\n        from: { opacity: 0, marginTop: 10},\r\n        config: { duration: (1000) }\r\n    });\r\n\r\n    return (<animated.div style={{ ...springProps}}>{children}</animated.div>);\r\n}\r\n\r\nfunction makeid(length) {\r\n    var result = [];\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result.push(characters.charAt(Math.floor(Math.random() *\r\n            charactersLength)));\r\n    }\r\n    return result.join('');\r\n}\r\n\r\nfunction Stage3({ code }) {\r\n    return (<div>\r\n        <br />\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Thank you for queueing</h3>\r\n                    <hr />\r\n                    <p>\r\n                        Please return to toloka now to fill out the questionnaire and enter your identification code.\r\n                    </p>\r\n                    <p><b>Identification code: {makeid(5) + code}</b></p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Route, HashRouter } from 'react-router-dom';\r\nimport Task1 from './components/Tasks/Task1';\r\nimport Task2 from './components/Tasks/Task2';\r\nimport Task3 from './components/Tasks/Task3';\r\nimport Task4 from './components/Tasks/Task4';\r\nimport Task5 from './components/Tasks/Task5';\r\nimport Home from './components/Home/Home';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<HashRouter >\r\n\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t<Route exact path=\"/task1\" component={Task1} />\r\n\t\t\t<Route exact path=\"/task2\" component={Task2} />\r\n\t\t\t<Route exact path=\"/task3\" component={Task3} />\r\n\t\t\t<Route exact path=\"/task4\" component={Task4} />\r\n\t\t\t<Route exact path=\"/task5\" component={Task5} />\r\n\t\t</HashRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import Button from 'react-bootstrap/Button';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            <Button variant=\"primary\">Primary</Button>{' '}\r\n            <Button variant=\"primary\">Primary</Button>{' '}\r\n            <Button variant=\"primary\">Primary</Button>{' '}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import Frame from \"../Frame/Frame\"\r\nimport { useState } from \"react\";\r\nimport { Image, Form, Col, Button, InputGroup} from \"react-bootstrap\";\r\nimport tasks from \"../../tasks_data/tasks_1.json\";\r\n\r\nexport default function Task1() {\r\n    const [code, setCode] = useState(0);\r\n    const [finished, setFinished] = useState(false);\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [selected, setSelected] = useState(0);\r\n\r\n    if (finished) {\r\n        return (\r\n            <Frame code={code}>\r\n                <Col sm={12}>\r\n                    <p>Thank you for your time!</p>\r\n                </Col>\r\n            </Frame>)\r\n    }\r\n\r\n    const taskSubmitted = () => {   \r\n        if (answer.trim().length > 0) {\r\n            setSubmitted(false);\r\n            setSelected(selected + 1);\r\n            setCode(code+1);\r\n\r\n            if (selected >= tasks.length - 1) {\r\n                setFinished(true);\r\n            }\r\n\r\n            setAnswer(\"\");\r\n        } else {\r\n            setSubmitted(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Frame code={code}>\r\n            <Col sm={12}>\r\n                <h5>Whilst you're waiting, why not do something productive?</h5>\r\n                <p>{tasks[selected].question}</p>\r\n            </Col>\r\n            <Col sm={12}>\r\n                <Form>\r\n                    <Image src={process.env.PUBLIC_URL + tasks[selected].image} style={{ maxHeight: \"300px\", marginBottom: \"25px\" }} />\r\n                    <InputGroup size=\"sm\" className=\"mb-3\" hasValidation>\r\n                        <Form.Control type=\"text\" aria-describedby=\"inputGroup-sizing-sm\" name=\"answer\" value={answer} onChange={ e => setAnswer(e.target.value)} isInvalid={submitted && answer.trim().length === 0}/>\r\n                        <InputGroup.Append>\r\n                            <Button onClick={taskSubmitted}>Submit</Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form>\r\n            </Col>\r\n        </Frame>);\r\n}","import Frame from \"../Frame/Frame\"\r\nimport { useState } from \"react\";\r\nimport { Image, Col, Button, Form } from \"react-bootstrap\";\r\nimport tasks from \"../../tasks_data/tasks_2.json\"\r\n\r\nexport default function Task2() {\r\n    const [code, setCode] = useState(0);\r\n    const [finished, setFinished] = useState(false);\r\n    const [selected, setSelected] = useState(0);\r\n\r\n    if (finished) {\r\n        return (\r\n            <Frame code={code}>\r\n                <Col sm={12}>\r\n                    <p>Thank you for your time!</p>\r\n                </Col>\r\n            </Frame>)\r\n    }\r\n\r\n    const taskSubmitted = () => {   \r\n        setSelected(selected + 1);\r\n        setCode(code+1);\r\n\r\n        if (selected >= tasks.length - 1) {\r\n            setFinished(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Frame code={code}>\r\n            <Col sm={12}>\r\n                <h5>Whilst you're waiting, why not do something productive?</h5>\r\n                <p>{tasks[selected].question}</p>\r\n            </Col>\r\n            <Col sm={12}>\r\n                <Image src={process.env.PUBLIC_URL + tasks[selected].image} style={{ maxHeight: \"300px\", marginBottom: \"25px\" }}></Image>\r\n                <Form>\r\n                    <Form.Group>\r\n                        {tasks[selected].options.map((x) => (<Button onClick={taskSubmitted} style={{marginRight: \"10px\"}}>{x}</Button>))}\r\n                    </Form.Group>\r\n                </Form>\r\n            </Col>\r\n        </Frame>);\r\n}","import Frame from \"../Frame/Frame\";\r\nimport { useState } from \"react\";\r\nimport { Image, Col } from \"react-bootstrap\";\r\nimport tasks from \"../../tasks_data/tasks_3.json\";\r\n\r\nexport default function Task3() {\r\n    const [code, setCode] = useState(0);\r\n    const [finished, setFinished] = useState(false);\r\n    const [correct, setCorrect] = useState(false);\r\n    const [selected, setSelected] = useState(0);\r\n\r\n    if (finished) {\r\n        //setCode(1) //TBD encode correct\r\n        return (\r\n            <Frame code={code}>\r\n                <Col sm={12}>\r\n                    <p>Thank you for your time!</p>\r\n                </Col>\r\n            </Frame>\r\n        )\r\n    }\r\n\r\n    const taskSubmitted = () => {   \r\n        setSelected(selected + 1);\r\n        setCode(code+1);\r\n\r\n        if (selected >= tasks.length - 1) {\r\n            setFinished(true);\r\n        }\r\n    }\r\n\r\n    return <Frame code={code}>\r\n        <Col sm={12}>\r\n            <h5>Whilst you're waiting, why not do something productive?</h5>\r\n            <p dangerouslySetInnerHTML={{ __html: tasks[selected].question }}></p>\r\n        </Col>\r\n        <Col sm={8}>\r\n            {tasks[selected].options.map((x) => (\r\n                <Image src={process.env.PUBLIC_URL + x} style={{ maxWidth: \"300px\", marginBottom: \"25px\", marginRight: \"25px\" }} onClick={taskSubmitted}/>\r\n            ))}\r\n        </Col>\r\n    </Frame>\r\n\r\n    //Show a word and 4 images, task workers have to choose the image that is described\r\n}","import Frame from \"../Frame/Frame\"\r\nimport { useState } from \"react\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\nimport tasks from \"../../tasks_data/tasks_4.json\";\r\n\r\nexport default function Task4() {\r\n    const [code, setCode] = useState(0);\r\n    const [finished, setFinished] = useState(false);\r\n    const [selected, setSelected] = useState(0);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [option, setOption] = useState(\"\");\r\n    if (finished) {\r\n        return (\r\n            <Frame code={code}>\r\n                <Col sm={12}>\r\n                    <p>Thank you for your time!</p>\r\n                </Col>\r\n            </Frame>)\r\n    }\r\n\r\n    const taskSubmitted = () => { \r\n        // next task\r\n        console.log(option);\r\n        if (option.trim().length > 0) {\r\n            setSelected(selected + 1);\r\n            setCode(code+1);\r\n            setOption(\"\");\r\n            setSubmitted(false);\r\n            if (selected >= option.length) {\r\n                setFinished(true);\r\n            }\r\n        } else {\r\n            setSubmitted(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Frame code={code} setCode={setCode}>\r\n            <Col sm={12}>\r\n                <h5>{tasks[selected].question}</h5>\r\n                <Form>\r\n                    <Form.Group>\r\n                        {tasks[selected].options.map((x) => (\r\n                            <Form.Check label={x} name={`group${selected}`} type=\"radio\" id={`inline-radio-${selected}`}  isInvalid={submitted && option.trim().length === 0} onChange={() => setOption(x)} checked={(x === option)}  />\r\n                        ))}\r\n                    </Form.Group>\r\n                    <Button onClick={taskSubmitted}>Submit</Button>\r\n                </Form>\r\n            </Col>\r\n        </Frame>);\r\n}","import Frame from \"../Frame/Frame\"\r\nimport { useState } from \"react\";\r\n\r\nexport default function Task5() {\r\n    const [code, setCode] = useState(0);\r\n\r\n    return <Frame code={code}><img src={process.env.PUBLIC_URL + \"/images/loading.gif\"} alt=\"Waiting in queue...\" /></Frame>\r\n    //Show loading animation, no task (benchmark)\r\n}"],"sourceRoot":""}